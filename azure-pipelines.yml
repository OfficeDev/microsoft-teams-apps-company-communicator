pool:
  name: Azure Pipelines
  vmImage: 'windows-2022'
  demands:
  - msbuild
  - visualstudio

variables:
  BuildPlatform: 'Any CPU'
  Solution: 'Source/Microsoft.Teams.Apps.CompanyCommunicator.sln'
  BuildConfiguration: 'Release'

steps:
- checkout: self

- task: UseDotNet@2 
  displayName: 'Use .NET 6.0.x'
  inputs:
    packageType: sdk
    version: '6.0.x'
    includePreviewVersions: true

- task: DotNetCoreCLI@2
  displayName: 'Build solution'
  inputs:
    command: build
    projects: $(Solution)
    arguments: '--configuration $(BuildConfiguration)'

- task: DotNetCoreCLI@2
  displayName: 'Run unit tests'
  inputs:
    command: test
    projects: $(Solution)
    arguments: '--collect "Code coverage"'

- task: DotNetCoreCLI@2
  displayName: 'Publish Company Communicator'
  inputs:
    command: publish
    publishWebProjects: false
    projects: Source/CompanyCommunicator/Microsoft.Teams.Apps.CompanyCommunicator.csproj
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish data function'
  inputs:
    command: publish
    publishWebProjects: false
    projects: Source/CompanyCommunicator.Data.Func/Microsoft.Teams.Apps.CompanyCommunicator.Data.Func.csproj
    arguments: '--configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)'
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish prep function'
  inputs:
    command: publish
    publishWebProjects: false
    projects: Source/CompanyCommunicator.Prep.Func/Microsoft.Teams.Apps.CompanyCommunicator.Prep.Func.csproj
    arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)
    zipAfterPublish: True

- task: DotNetCoreCLI@2
  displayName: 'Publish send function'
  inputs:
    command: publish
    publishWebProjects: false
    projects: Source/CompanyCommunicator.Send.Func/Microsoft.Teams.Apps.CompanyCommunicator.Send.Func.csproj
    arguments: --configuration $(BuildConfiguration) --output $(build.artifactstagingdirectory)

- task: RoslynAnalyzers@2
  displayName: 'Run Roslyn code analyzers'
  inputs:
    userProvideBuildInfo: 'msBuildInfo'
    msBuildVersion: '16.0'
    msBuildArchitecture: 'DotNetCore'
    msBuildCommandline: '$(Agent.ToolsDirectory)\dotnet\dotnet.exe build $(Solution) --configuration $(BuildConfiguration)'
    rulesetName: 'Skype'

- task: TSLint@1
  displayName: Run TSLint
  inputs:
    RuleLibrary: microsoft
    RulesetMicrosoft: skypesdlrequired
    FileSelectionType: projectFile
    Project: Source/CompanyCommunicator/ClientApp/tsconfig.json
  
- task: PoliCheck@1
  displayName: 'Run Policheck'
  inputs:
    inputType: 'Basic'
    targetType: 'F'
    targetArgument: '$(Build.SourcesDirectory)'
    result: 'PoliCheck.xml'
    optionsUEPATH: '$(Build.SourcesDirectory)\Build\UserExclusion.xml'

- task: SdtReport@1
  displayName: 'Generate tool reports'
  inputs:
    AllTools: true
    BinSkimBreakOn: 'Error'
    CodesignValidationBreakOn: 'Error'
    FxCopBreakOn: 'ErrorAbove'
    ModernCopBreakOn: 'Error'
    PoliCheckBreakOn: 'Severity1'
    RoslynAnalyzersBreakOn: 'Error'
    SemmleBreakOn: 'Error'
    TSLintBreakOn: 'Error'
    ToolLogsNotFoundAction: 'Standard'

- task: PostAnalysis@1
  displayName: 'Analyze tool results'
  inputs:
    AllTools: true
    BinSkimBreakOn: 'Error'
    CodesignValidationBreakOn: 'Error'
    FxCopBreakOn: 'ErrorAbove'
    ModernCopBreakOn: 'Error'
    PoliCheckBreakOn: 'Severity1'
    RoslynAnalyzersBreakOn: 'Error'
    SemmleBreakOn: 'Error'
    TSLintBreakOn: 'Error'
    ToolLogsNotFoundAction: 'Standard'

- task: PublishSecurityAnalysisLogs@2
  inputs:
    ArtifactName: 'CodeAnalysisLogs'
    ArtifactType: 'Container'
    AllTools: true
    ToolLogsNotFoundAction: 'Standard'

- task: ComponentGovernanceComponentDetection@0
  displayName: Component Detection

- task: CopyFiles@2
  displayName: 'Copy Files to: $(build.artifactstagingdirectory)/cc'
  inputs:
    SourceFolder: '$(build.artifactstagingdirectory)'
    TargetFolder: '$(build.artifactstagingdirectory)/cc'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Artifact'
  inputs:
    PathtoPublish: '$(build.artifactstagingdirectory)/cc'
    