{
   "$schema":"https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
   "contentVersion":"1.0.0.0",
   "parameters":{
      "baseResourceName":{
         "type":"string",
         "minLength":1,
         "metadata":{
            "description":"The base name to use for the resources that will be provisioned."
         }
      },
      "userClientId":{
         "type":"string",
         "minLength":36,
         "maxLength":36,
         "metadata":{
            "description":"The client ID of the user bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
         }
      },
      "userClientSecret":{
         "type":"securestring",
         "minLength":1,
         "metadata":{
            "description":"The client secret of the user bot Azure AD app."
         }
      },
      "authorClientId":{
         "type":"string",
         "minLength":36,
         "maxLength":36,
         "metadata":{
            "description":"The client ID of the author bot Azure AD app, e.g., 123e4567-e89b-12d3-a456-426655440000."
         }
      },
      "authorClientSecret":{
         "type":"securestring",
         "minLength":1,
         "metadata":{
            "description":"The client secret of the author bot Azure AD app."
         }
      },
      "botAppInsightsKey":{
         "type":"securestring",
         "minLength":1,
         "metadata":{
            "description":"The instrumentation key for the app insights created for the bot."
         }
      },
      "senderUPNList":{
         "type":"string",
         "minLength":1,
         "metadata":{
            "description":"Semicolon-delimited list of the user principal names (UPNs) allowed to send messages."
         }
      },
      "ProactivelyInstallUserApp":{
         "defaultValue": true,
         "type":"Bool",
         "metadata":{
            "description":"If proactive app installation should be enabled."
         }
      },
      "UserAppExternalId":{
         "defaultValue": "148a66bb-e83d-425a-927d-09f4299a9274",
         "minLength":1,
         "type":"String",
         "metadata":{
            "description":"User app external ID."
         }
      },
      "DefaultCulture":{
         "defaultValue":"en-US",
         "allowedValues":[
            "ar-SA",
            "de-DE",
            "en-US",
            "es-ES",
            "fr-FR",
            "he-IL",
            "ja-JP",
            "ko-KR",
            "pt-BR",
            "ru-RU",
            "zh-CN",
            "zh-TW"
         ],
         "minLength":1,
         "type":"String",
         "metadata":{
            "description":"Default culture."
         }
      },
      "SupportedCultures":{
         "defaultValue":"ar-SA,de-DE,en-US,es-ES,fr-FR,he-IL,ja-JP,ko-KR,pt-BR,ru-RU,zh-CN,zh-TW",
         "minLength":1,
         "type":"String",
         "metadata":{
            "description":"Comma-delimited list of the supported cultures."
         }
      },
      "tenantId":{
         "type":"string",
         "minLength":1,
         "maxLength":36,
         "metadata":{
            "description":"The ID of the tenant to which the app will be deployed. If you are deploying for users outside of GCC High, use the tenant ID tied to the teams users' subscription"
         }
      },
      "hostingPlanSku":{
         "type":"string",
         "allowedValues":[
            "Basic",
            "Standard",
            "Premium"
         ],
         "defaultValue":"Basic",
         "metadata":{
            "description":"The pricing tier for the hosting plan."
         }
      },
      "hostingPlanSize":{
         "type":"string",
         "allowedValues":[
            "1",
            "2",
            "3"
         ],
         "defaultValue":"1",
         "metadata":{
            "description":"The size of the hosting plan (small, medium, or large)."
         }
      },
      "location":{
         "type":"string",
         "defaultValue":"[resourceGroup().location]",
         "metadata":{
            "description":"Location for all resources."
         }
      },
      "gitRepoUrl":{
         "type":"string",
         "metadata":{
            "description":"The URL to the GitHub repository to deploy."
         },
         "defaultValue":"https://github.com/OfficeDev/microsoft-teams-company-communicator-app.git"
      },
      "gitBranch":{
         "type":"string",
         "metadata":{
            "description":"The branch of the GitHub repository to deploy."
         },
         "defaultValue":"master"
      }
   },
   "variables":{
      "botAppName":"[parameters('baseResourceName')]",
      "botAppDomain":"[concat(variables('botAppName'), '.azurewebsites.us')]",
      "hostingPlanName":"[parameters('baseResourceName')]",
      "storageAccountName":"[uniquestring(concat(resourceGroup().id, parameters('baseResourceName')))]",
      "prepFunctionAppName":"[concat(parameters('baseResourceName'), '-prep-function')]",
      "sendFunctionAppName":"[concat(parameters('baseResourceName'), '-function')]",
      "dataFunctionAppName":"[concat(parameters('baseResourceName'), '-data-function')]",
      "serviceBusNamespaceName":"[parameters('baseResourceName')]",
      "serviceBusSendQueueName":"company-communicator-send",
      "serviceBusDataQueueName":"company-communicator-data",
      "serviceBusPrepareToSendQueueName":"company-communicator-prep",
      "serviceBusExportQueueName":"company-communicator-export",
      "defaultSASKeyName":"RootManageSharedAccessKey",
      "authRuleResourceId":"[resourceId('Microsoft.ServiceBus/namespaces/authorizationRules', variables('serviceBusNamespaceName'), variables('defaultSASKeyName'))]",
      "sharedSkus":[
         "Free",
         "Shared"
      ],
      "isSharedPlan":"[contains(variables('sharedSkus'), parameters('hostingPlanSku'))]",
      "skuFamily":"[if(equals(parameters('hostingPlanSku'), 'Shared'), 'D', take(parameters('hostingPlanSku'), 1))]",
      "ProactivelyInstallUserApp":"[parameters('ProactivelyInstallUserApp')]",
      "UserAppExternalId":"[parameters('UserAppExternalId')]",
      "i18n:DefaultCulture":"[parameters('DefaultCulture')]",
      "i18n:SupportedCultures":"[parameters('SupportedCultures')]"
   },
   "resources":[
      {
         "type":"Microsoft.Storage/storageAccounts",
         "name":"[variables('storageAccountName')]",
         "apiVersion":"2019-06-01",
         "location":"[parameters('location')]",
         "kind":"Storage",
         "properties":{
            "supportsHttpsTrafficOnly":true,
            "allowBlobPublicAccess":false
         },
         "sku":{
            "name":"Standard_LRS"
         }
      },
      {
         "type":"Microsoft.Web/serverfarms",
         "apiVersion":"2016-09-01",
         "name":"[variables('hostingPlanName')]",
         "location":"[parameters('location')]",
         "properties":{
            "name":"[variables('hostingPlanName')]",
            "hostingEnvironment":"",
            "numberOfWorkers":1
         },
         "sku":{
            "name":"[if(variables('isSharedPlan'), concat(variables('skuFamily'), '1'), concat(variables('skuFamily'), parameters('hostingPlanSize')))]",
            "tier":"[parameters('hostingPlanSku')]",
            "size":"[concat(variables('skuFamily'), parameters('hostingPlanSize'))]",
            "family":"[variables('skuFamily')]",
            "capacity":0
         }
      },
      {
         "apiVersion":"2016-08-01",
         "type":"Microsoft.Web/sites",
         "name":"[variables('botAppName')]",
         "location":"[parameters('location')]",
         "kind":"app",
         "properties":{
            "name":"[variables('botAppName')]",
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "enabled":true,
            "reserved":false,
            "clientAffinityEnabled":true,
            "clientCertEnabled":false,
            "hostNamesDisabled":false,
            "containerSize":0,
            "dailyMemoryTimeQuota":0,
            "httpsOnly":true,
            "siteConfig":{
               "alwaysOn":"[not(variables('isSharedPlan'))]",
               "appSettings":[
                  {
                     "name":"PROJECT",
                     "value":"Source/CompanyCommunicator/Microsoft.Teams.Apps.CompanyCommunicator.csproj"
                  },
                  {
                     "name":"SITE_ROLE",
                     "value":"app"
                  },
                  {
                     "name":"i18n:DefaultCulture",
                     "value":"[variables('i18n:DefaultCulture')]"
                  },
                  {
                     "name":"i18n:SupportedCultures",
                     "value":"[variables('i18n:SupportedCultures')]"
                  },
                  {
                     "name":"ProactivelyInstallUserApp",
                     "value":"[variables('ProactivelyInstallUserApp')]"
                  },
                  {
                     "name":"UserAppExternalId",
                     "value":"[variables('UserAppExternalId')]"
                  },
                  {
                     "name":"AzureAd:TenantId",
                     "value":"[parameters('tenantId')]"
                  },
                  {
                     "name":"AzureAd:ClientId",
                     "value":"[parameters('authorClientId')]"
                  },
                  {
                     "name":"AzureAd:ClientSecret",
                     "value":"[parameters('authorClientSecret')]"
                  },
                  {
                     "name":"AzureAd:ApplicationIdURI",
                     "value":"[concat('api://', variables('botAppDomain'))]"
                  },
                  {
                     "name":"UserAppId",
                     "value":"[parameters('userClientId')]"
                  },
                  {
                     "name":"UserAppPassword",
                     "value":"[parameters('userClientSecret')]"
                  },
                  {
                     "name":"AuthorAppId",
                     "value":"[parameters('authorClientId')]"
                  },
                  {
                     "name":"AuthorAppPassword",
                     "value":"[parameters('authorClientSecret')]"
                  },
                  {
                     "name":"StorageAccountConnectionString",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1, ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"ServiceBusConnection",
                     "value":"[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                  },
                  {
                     "name":"AllowedTenants",
                     "value":"[parameters('tenantId')]"
                  },
                  {
                     "name":"DisableTenantFilter",
                     "value":"false"
                  },
                  {
                     "name":"AuthorizedCreatorUpns",
                     "value":"[parameters('senderUPNList')]"
                  },
                  {
                     "name":"DisableAuthentication",
                     "value":"false"
                  },
                  {
                     "name":"DisableCreatorUpnCheck",
                     "value":"false"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[parameters('botAppInsightsKey')]"
                  },
                  {
                     "name":"WEBSITE_NODE_DEFAULT_VERSION",
                     "value":"10.15.2"
                  }
               ],
               "cors":{
                  "supportCredentials":true,
                  "allowedOrigins":[
                     "[concat('https://', variables('botAppDomain'))]"
                  ]
               }
            }
         },
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]",
            "[resourceId('Microsoft.Web/sites', variables('prepFunctionAppName'))]",
            "[resourceId('Microsoft.Web/sites', variables('sendFunctionAppName'))]",
            "[resourceId('Microsoft.Web/sites', variables('dataFunctionAppName'))]"
         ],
         "resources":[
            {
               "apiVersion":"2016-08-01",
               "name":"web",
               "type":"sourcecontrols",
               "condition":"[not(empty(parameters('gitRepoUrl')))]",
               "dependsOn":[
                  "[resourceId('Microsoft.Web/sites', variables('botAppName'))]"
               ],
               "properties":{
                  "RepoUrl":"[parameters('gitRepoUrl')]",
                  "branch":"[parameters('gitBranch')]",
                  "IsManualIntegration":true
               }
            }
         ]
      },
      {
         "type":"Microsoft.ServiceBus/namespaces",
         "apiVersion":"2017-04-01",
         "name":"[variables('serviceBusNamespaceName')]",
         "location":"[parameters('location')]",
         "sku":{
            "name":"Basic",
            "tier":"Basic"
         },
         "resources":[
            {
               "type":"Queues",
               "apiVersion":"2017-04-01",
               "name":"[variables('serviceBusSendQueueName')]",
               "dependsOn":[
                  "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
               ],
               "properties":{
                  "lockDuration":"PT5M",
                  "maxSizeInMegabytes":1024,
                  "requiresDuplicateDetection":false,
                  "requiresSession":false,
                  "defaultMessageTimeToLive":"P14D",
                  "deadLetteringOnMessageExpiration":false,
                  "enableBatchedOperations":true,
                  "duplicateDetectionHistoryTimeWindow":"PT10M",
                  "maxDeliveryCount":10,
                  "status":"Active",
                  "enablePartitioning":false,
                  "enableExpress":false
               }
            },
            {
               "type":"Queues",
               "apiVersion":"2017-04-01",
               "name":"[variables('serviceBusDataQueueName')]",
               "dependsOn":[
                  "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
               ],
               "properties":{
                  "lockDuration":"PT5M",
                  "maxSizeInMegabytes":1024,
                  "requiresDuplicateDetection":false,
                  "requiresSession":false,
                  "defaultMessageTimeToLive":"P14D",
                  "deadLetteringOnMessageExpiration":false,
                  "enableBatchedOperations":true,
                  "duplicateDetectionHistoryTimeWindow":"PT10M",
                  "maxDeliveryCount":10,
                  "status":"Active",
                  "enablePartitioning":false,
                  "enableExpress":false
               }
            },
            {
               "type":"Queues",
               "apiVersion":"2017-04-01",
               "name":"[variables('serviceBusPrepareToSendQueueName')]",
               "dependsOn":[
                  "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
               ],
               "properties":{
                  "lockDuration":"PT5M",
                  "maxSizeInMegabytes":1024,
                  "requiresDuplicateDetection":false,
                  "requiresSession":false,
                  "defaultMessageTimeToLive":"P14D",
                  "deadLetteringOnMessageExpiration":false,
                  "enableBatchedOperations":true,
                  "duplicateDetectionHistoryTimeWindow":"PT10M",
                  "maxDeliveryCount":10,
                  "status":"Active",
                  "enablePartitioning":false,
                  "enableExpress":false
               }
            },
            {
               "type":"Queues",
               "apiVersion":"2017-04-01",
               "name":"[variables('serviceBusExportQueueName')]",
               "dependsOn":[
                  "[concat('Microsoft.ServiceBus/namespaces/', variables('serviceBusNamespaceName'))]"
               ],
               "properties":{
                  "lockDuration":"PT5M",
                  "maxSizeInMegabytes":1024,
                  "requiresDuplicateDetection":false,
                  "requiresSession":false,
                  "defaultMessageTimeToLive":"P14D",
                  "deadLetteringOnMessageExpiration":false,
                  "enableBatchedOperations":true,
                  "duplicateDetectionHistoryTimeWindow":"PT10M",
                  "maxDeliveryCount":10,
                  "status":"Active",
                  "enablePartitioning":false,
                  "enableExpress":false
               }
            }
         ]
      },
      {
         "apiVersion":"2016-08-01",
         "type":"Microsoft.Web/sites",
         "name":"[variables('prepFunctionAppName')]",
         "location":"[parameters('location')]",
         "kind":"functionapp",
         "properties":{
            "name":"[variables('prepFunctionAppName')]",
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "hostingEnvironment":"",
            "clientAffinityEnabled":false,
            "siteConfig":{
               "alwaysOn":"[not(variables('isSharedPlan'))]",
               "appSettings":[
                  {
                     "name":"PROJECT",
                     "value":"Source\\CompanyCommunicator.Prep.Func\\Microsoft.Teams.Apps.CompanyCommunicator.Prep.Func.csproj"
                  },
                  {
                     "name":"SITE_ROLE",
                     "value":"function"
                  },
                  {
                     "name":"i18n:DefaultCulture",
                     "value":"[variables('i18n:DefaultCulture')]"
                  },
                  {
                     "name":"i18n:SupportedCultures",
                     "value":"[variables('i18n:SupportedCultures')]"
                  },
                  {
                     "name":"ProactivelyInstallUserApp",
                     "value":"[variables('ProactivelyInstallUserApp')]"
                  },
                  {
                     "name":"UserAppExternalId",
                     "value":"[variables('UserAppExternalId')]"
                  },
                  {
                     "name":"AzureWebJobsStorage",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';', ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"AzureWebJobsDashboard",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';', ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"FUNCTIONS_EXTENSION_VERSION",
                     "value":"~3"
                  },
                  {
                     "name":"FUNCTIONS_WORKER_RUNTIME",
                     "value":"dotnet"
                  },
                  {
                     "name":"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1, ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"WEBSITE_CONTENTSHARE",
                     "value":"[toLower(variables('prepFunctionAppName'))]"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[parameters('botAppInsightsKey')]"
                  },
                  {
                     "name":"AuthorAppId",
                     "value":"[parameters('authorClientId')]"
                  },
                  {
                     "name":"AuthorAppPassword",
                     "value":"[parameters('authorClientSecret')]"
                  },
                  {
                     "name":"UserAppId",
                     "value":"[parameters('userClientId')]"
                  },
                  {
                     "name":"UserAppPassword",
                     "value":"[parameters('userClientSecret')]"
                  },
                  {
                     "name":"TenantId",
                     "value":"[parameters('tenantId')]"
                  },
                  {
                     "name":"StorageAccountConnectionString",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1, ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"ServiceBusConnection",
                     "value":"[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                  }
               ]
            }
         },
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
         ],
         "resources":[
            {
               "apiVersion":"2015-08-01",
               "name":"web",
               "type":"sourcecontrols",
               "condition":"[not(empty(parameters('gitRepoUrl')))]",
               "dependsOn":[
                  "[resourceId('Microsoft.Web/sites', variables('prepFunctionAppName'))]"
               ],
               "properties":{
                  "RepoUrl":"[parameters('gitRepoUrl')]",
                  "branch":"[parameters('gitBranch')]",
                  "IsManualIntegration":true
               }
            }
         ]
      },
      {
         "apiVersion":"2016-08-01",
         "type":"Microsoft.Web/sites",
         "name":"[variables('sendFunctionAppName')]",
         "location":"[parameters('location')]",
         "kind":"functionapp",
         "properties":{
            "name":"[variables('sendFunctionAppName')]",
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "hostingEnvironment":"",
            "clientAffinityEnabled":false,
            "siteConfig":{
               "alwaysOn":"[not(variables('isSharedPlan'))]",
               "appSettings":[
                  {
                     "name":"PROJECT",
                     "value":"Source\\CompanyCommunicator.Send.Func\\Microsoft.Teams.Apps.CompanyCommunicator.Send.Func.csproj"
                  },
                  {
                     "name":"SITE_ROLE",
                     "value":"function"
                  },
                  {
                     "name":"i18n:DefaultCulture",
                     "value":"[variables('i18n:DefaultCulture')]"
                  },
                  {
                     "name":"i18n:SupportedCultures",
                     "value":"[variables('i18n:SupportedCultures')]"
                  },
                  {
                     "name":"AzureWebJobsStorage",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';', ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"AzureWebJobsDashboard",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';', ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"FUNCTIONS_EXTENSION_VERSION",
                     "value":"~3"
                  },
                  {
                     "name":"FUNCTIONS_WORKER_RUNTIME",
                     "value":"dotnet"
                  },
                  {
                     "name":"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1, ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"WEBSITE_CONTENTSHARE",
                     "value":"[toLower(variables('sendFunctionAppName'))]"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[parameters('botAppInsightsKey')]"
                  },
                  {
                     "name":"MaxNumberOfAttempts",
                     "value":"5"
                  },
                  {
                     "name":"UserAppId",
                     "value":"[parameters('userClientId')]"
                  },
                  {
                     "name":"UserAppPassword",
                     "value":"[parameters('userClientSecret')]"
                  },
                  {
                     "name":"StorageAccountConnectionString",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1, ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"ServiceBusConnection",
                     "value":"[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                  }
               ]
            }
         },
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
         ],
         "resources":[
            {
               "apiVersion":"2015-08-01",
               "name":"web",
               "type":"sourcecontrols",
               "condition":"[not(empty(parameters('gitRepoUrl')))]",
               "dependsOn":[
                  "[resourceId('Microsoft.Web/sites', variables('sendFunctionAppName'))]"
               ],
               "properties":{
                  "RepoUrl":"[parameters('gitRepoUrl')]",
                  "branch":"[parameters('gitBranch')]",
                  "IsManualIntegration":true
               }
            }
         ]
      },
      {
         "apiVersion":"2016-08-01",
         "type":"Microsoft.Web/sites",
         "name":"[variables('dataFunctionAppName')]",
         "location":"[parameters('location')]",
         "kind":"functionapp",
         "properties":{
            "name":"[variables('dataFunctionAppName')]",
            "serverFarmId":"[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "hostingEnvironment":"",
            "clientAffinityEnabled":false,
            "siteConfig":{
               "alwaysOn":"[not(variables('isSharedPlan'))]",
               "appSettings":[
                  {
                     "name":"PROJECT",
                     "value":"Source\\CompanyCommunicator.Data.Func\\Microsoft.Teams.Apps.CompanyCommunicator.Data.Func.csproj"
                  },
                  {
                     "name":"SITE_ROLE",
                     "value":"function"
                  },
                  {
                     "name":"i18n:DefaultCulture",
                     "value":"[variables('i18n:DefaultCulture')]"
                  },
                  {
                     "name":"i18n:SupportedCultures",
                     "value":"[variables('i18n:SupportedCultures')]"
                  },
                  {
                     "name":"AzureWebJobsStorage",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';', ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"AzureWebJobsDashboard",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'),';AccountKey=',listkeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')), '2015-05-01-preview').key1,';', ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"FUNCTIONS_EXTENSION_VERSION",
                     "value":"~3"
                  },
                  {
                     "name":"FUNCTIONS_WORKER_RUNTIME",
                     "value":"dotnet"
                  },
                  {
                     "name":"WEBSITE_CONTENTAZUREFILECONNECTIONSTRING",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1, ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"WEBSITE_CONTENTSHARE",
                     "value":"[toLower(variables('dataFunctionAppName'))]"
                  },
                  {
                     "name":"APPINSIGHTS_INSTRUMENTATIONKEY",
                     "value":"[parameters('botAppInsightsKey')]"
                  },
                  {
                     "name":"AuthorAppId",
                     "value":"[parameters('authorClientId')]"
                  },
                  {
                     "name":"AuthorAppPassword",
                     "value":"[parameters('authorClientSecret')]"
                  },
                  {
                     "name":"UserAppId",
                     "value":"[parameters('userClientId')]"
                  },
                  {
                     "name":"UserAppPassword",
                     "value":"[parameters('userClientSecret')]"
                  },
                  {
                     "name":"CleanUpScheduleTriggerTime",
                     "value":"30 23 * * *"
                  },
                  {
                     "name":"CleanUpFile",
                     "value":"1"
                  },
                  {
                     "name":"StorageAccountConnectionString",
                     "value":"[concat('DefaultEndpointsProtocol=https;AccountName=', variables('storageAccountName'), ';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName')),'2015-05-01-preview').key1, ';EndpointSuffix=','core.usgovcloudapi.net')]"
                  },
                  {
                     "name":"ServiceBusConnection",
                     "value":"[listkeys(variables('authRuleResourceId'), '2017-04-01').primaryConnectionString]"
                  }
               ]
            }
         },
         "dependsOn":[
            "[resourceId('Microsoft.Web/serverfarms', variables('hostingPlanName'))]",
            "[resourceId('Microsoft.Storage/storageAccounts', variables('storageAccountName'))]",
            "[resourceId('Microsoft.ServiceBus/namespaces', variables('serviceBusNamespaceName'))]"
         ],
         "resources":[
            {
               "apiVersion":"2015-08-01",
               "name":"web",
               "type":"sourcecontrols",
               "condition":"[not(empty(parameters('gitRepoUrl')))]",
               "dependsOn":[
                  "[resourceId('Microsoft.Web/sites', variables('dataFunctionAppName'))]"
               ],
               "properties":{
                  "RepoUrl":"[parameters('gitRepoUrl')]",
                  "branch":"[parameters('gitBranch')]",
                  "IsManualIntegration":true
               }
            }
         ]
      }
   ],
   "outputs":{
      "authorBotId":{
         "type":"string",
         "value":"[parameters('authorClientId')]"
      },
      "userBotId":{
         "type":"string",
         "value":"[parameters('userClientId')]"
      },
      "appDomain":{
         "type":"string",
         "value":"[variables('botAppDomain')]"
      }
   }
}
